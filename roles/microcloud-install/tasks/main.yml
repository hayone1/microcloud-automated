---
- name: Check if the resolved.conf exists
  stat:
    path: /etc/systemd/resolved.conf
  register: resolved_stat

- name: Install Microceph snap (channel - '{{microceph_channel}}')
  # when: "'microceph' not in ansible_facts.packages"
  snap:
    name: microceph
    channel: '{{microceph_channel}}'
    classic: no

- name: Install Microovn snap (channel - '{{microovn_channel}}')
  # when: "'microovn' not in ansible_facts.packages"
  snap:
    name: microovn
    channel: '{{microovn_channel}}'
    classic: no

- name: Install Microcloud snap (channel - '{{microcloud_channel}}')
  # when: "'microcloud' not in ansible_facts.packages"
  snap:
    name: microcloud
    channel: '{{microcloud_channel}}'
    classic: no

# - name: download interim microcloud
#   # ansible.builtin.get_url:
#   #   url: https://github.com/hayone1/microcloud/releases/download/microcloud-beta.3/microcloud.tar.gz
#   #   dest: /tmp/microcloud.tar.gz
#   command: |
#     curl -L --output /tmp/microcloud.tar.gz https://github.com/hayone1/microcloud/releases/download/microcloud-beta.3/microcloud.tar.gz
#   args:
#     creates: /tmp/microcloud.tar.gz
    
# - name: untar interim microcloud
#   unarchive:
#     src: /tmp/microcloud.tar.gz
#     dest: /tmp
#     remote_src: true
#   args:
#     creates: /tmp/bin/microcloud
# # - name: untar interim microcloud
# #   command: tar -xzvf /tmp/microcloud.tar.gz
# #   args:
# #     creates: /tmp/bin/microcloud

# - name: replace microcloud snap with interim microcloud
#   shell: |
#     mv /tmp/bin/microcloud /snap/bin/microcloud

- name: Copy preseed file to first host
  delegate_to: '{{ansible_play_hosts[0]}}'
  run_once: true
  copy:
    src: ./infra-{{ansible_limit}}/preseed.yml
    dest: /tmp/infra-{{ansible_limit}}-preseed.yml

- name: Reboot
  ansible.builtin.reboot:

- name: Test mDNS all-to-all connectivity
  command: resolvectl query -4 {{peer_hostname}}.local
  vars:
    peer_hostname: "{{hostvars[item]['ansible_nodename']}}"
  loop: "{{ groups[ansible_limit] }}"
  register: mDNS_results
  retries: 3
  delay: 3
  until: mDNS_results.rc == 0
  when: resolved_stat.stat.exists

- name: Initialize microcloud (only on first host)
  delegate_to: '{{ansible_play_hosts[0]}}'
  run_once: true
  shell:
    # cmd: microcloud init --address {{address}} --auto --debug --verbose # I give up on preseed
    cmd: >-
      cat /tmp/infra-{{ansible_limit}}-preseed.yml |
      microcloud init --address {{address}}
      --preseed --debug --verbose
    # --state-dir /var/snap/microcloud/common/state
  register: init_result
  ignore_errors: true
  vars:
    address: '{{ lookup_subnet | ansible.utils.next_nth_usable(host_index | int) }}'
- debug:
    run_once: true
    msg: '{{init_result.stdout_lines}}'

- name: Show LXC Cluster
  when: init_result.rc == 0
  delegate_to: '{{ansible_play_hosts[0]}}'
  run_once: true
  command: lxc cluster list
  register: lxc_cluster
- debug:
    when: init_result.rc == 0
    msg: "{{lxc_cluster.stdout_lines}}"
