---

######################################
# Values you're probably interested in changing.
######################################
# ansible_ssh_host_key_checking: False
# your environments, eg. dev, test, uat, sit, prod etc.
groups: # can only be in all.yml
  - dev
######################################


######################################
# Values here can be the all.yml or in a group specific yml
# and should generally be fine with their defaults.
######################################

# dummy interface that should be created
# for microcloud to use
ovn_uplink_interface: eth9
ovn_uplink_mac_prefix: '52:54:00'
# location where various packages will be installed
package_dir: /usr/bin

# be careful with these values, ensure they are correct
# or the setup will fail without a proper indication as to why
lxd_channel: 5.21/stable
microceph_channel: quincy/stable
microovn_channel: 22.03/stable
microcloud_channel: latest/stable


# The mask of the `lookup_subnet` to use when automatically looking up systems with mDNS.
# Note: This is not the same as the `lookup_subnet` itself, just it's mask
lookup_subnet_mask: /24
# `ovn` is optional and represents the OVN & uplink network configuration for LXD.
ovn:
  ipv4_gateway: 192.0.2.1/24
  ipv4_range: 192.0.2.100-192.0.2.254
  ipv6_gateway: 2001:db8:d:200::1/64
  dns_servers: 192.0.2.1,2001:db8:d:200::1

# `storage` is optional and is used as basic filtering logic for finding disks across all systems.
# Filters are checked in order of appearance.
# The names and values of each key correspond to the YAML field names for the `api.ResouresStorageDisk`
# struct here:
# https://github.com/canonical/lxd/blob/c86603236167a43836c2766647e2fac97d79f899/shared/api/resource.go#L591
# Supported operands: &&, ||, <, >, <=, >=, ==, !=, !
# String values must not be in quotes unless the string contains a space.
# Single quotes are fine, but double quotes must be escaped.
# `find_min` and `find_max` can be used to validate the number of disks each filter finds.
# `cephfs: true` can be used to optionally set up a CephFS file system alongside Ceph distributed storage.
storage:
  cephfs: true
  local:
    - find: 'size > 10GiB && size < 50GiB && type == nvme'
      find_min: 1
      find_max: 1
      wipe: true
    - find: 'size > 10GiB && size < 50GiB && type == hdd && block_size == 512 && model == "Samsung %"'
      find_min: 3
      find_max: 3
      wipe: false
  ceph:
    - find: 'size > 10GiB && size < 50GiB && type == nvme'
      find_min: 1
      find_max: 2
      wipe: true
    - find: 'size > 10GiB && size < 50GiB && type == hdd && partitioned == false && block_size == 512 && model == "Samsung %"'
      find_min: 3
      find_max: 8
      wipe: false
######################################
